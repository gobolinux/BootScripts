#!/bin/bash

# GoboLinux017, based on the various Progress themes

source $BootScriptsDir/Functions/ConsoleToolkit

ESC=`echo -e "\033"` # Escape character
CSI=`echo -e "\033["` # Control Sequence Introducer; equivalent to ${ESC}[

CLREOL="${CSI}K"

SB="█" # square up & down
SD="▄"  # square down
SU="▀"  # square up

mode="$1"
runlevel="$2"

[[ -e "${goboDevices}/fb/0" ]] && framebuffer="yes"   
[[ -e "/dev/fb0" ]] && framebuffer="yes"

gradient=(4 3 1 5 7 9 10 2 6 8 11)


banner1=(
"  ▄▄▄▄▄▄▄▄▄▄▄▄                  ▄▄▄▄                            ▄▄▄▄            ▄▄▄▄"
"▄▄▄▄                            ▄▄▄▄                            ▄▄▄▄            ▄▄▄▄"
"▄▄▄▄                            ▄▄▄▄                            ▄▄▄▄"
"▄▄▄▄              ▄▄▄▄▄▄▄▄▄▄    ▄▄▄▄▄▄▄▄▄▄▄▄      ▄▄▄▄▄▄▄▄▄▄    ▄▄▄▄            ▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄▄    ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄"
"▄▄▄▄  ▄▄▄▄▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄            ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄    ▄▄▄▄  ▄▄▄▄"
"▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄            ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄      ▄▄▄▄▄▄  "
"▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄            ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄      ▄▄▄▄▄▄"
"▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄            ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄      ▄▄▄▄▄▄"
"▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄            ▄▄▄▄  ▄▄▄▄      ▄▄▄▄  ▄▄▄▄      ▄▄▄▄    ▄▄▄▄  ▄▄▄▄  "
"  ▄▄▄▄▄▄▄▄▄▄▄▄    ▄▄▄▄▄▄▄▄▄▄    ▄▄▄▄▄▄▄▄▄▄▄▄      ▄▄▄▄▄▄▄▄▄▄    ▄▄▄▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄  ▄▄▄▄      ▄▄▄▄    ▄▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄      ▄▄▄▄"
)


banner2=(
""
""
"▄█▀▀▀▀▀         ██              ██      ██"
"██       ▄▄▄▄▄  ██▄▄▄▄   ▄▄▄▄▄  ██      ▄▄ ▄▄▄▄▄▄  ▄▄   ▄▄ ▄▄   ▄▄ "
"██ ▀▀██ ██   ██ ██   ██ ██   ██ ██      ██ ██   ██ ██   ██  ▀█▄█▀"
"██   ██ ██   ██ ██   ██ ██   ██ ██      ██ ██   ██ ██   ██   ███"
"▀█▄▄▄██ ▀█▄▄▄█▀ ██▄▄▄█▀ ▀█▄▄▄█▀ ██▄▄▄▄▄ ██ ██   ██ ▀█▄▄▄██ ▄█▀ ▀█▄"
""
""
""
)


##########
#
# UI elements
#
##########

function DrawTopLogo() {
   local y
   (( y = ROWS / 2 - 2 ))
   
   echo -n "${ESC}(U"
   
   if [[ "$COLUMNS" -gt 132 ]]
   then
      halfwidth=64
      banner=("${banner1[@]}")
      c0="${CSI}0;32m"
      c1="${CSI}0;32m"
      c2="${CSI}0;33m"
      c3="${CSI}0;33m"
      c4="${CSI}0;34m"
      c5="${CSI}0;34m"
      c6="${CSI}0;35m"
      c7="${CSI}0;35m"
      c8="${CSI}1;37m"
      c9="${CSI}1;37m"
   else
      halfwidth=33
      banner=("${banner2[@]}")
      c0="${CSI}0;32m"
      c1="${CSI}0;32m"
      c2="${CSI}0;32m"
      c3="${CSI}0;33m"
      c4="${CSI}0;34m"
      c5="${CSI}0;35m"
      c6="${CSI}1;37m"
      c7="${CSI}1;37m"
      c8="${CSI}1;37m"
      c9="${CSI}1;37m"
   fi
   
   spaces=""
   for (( i = 0 ; i < COLUMNS/2-$halfwidth; i++ ))
   do spaces=" $spaces"
   done

   local delay
   delay=0.04
   echo $c4
   GotoXY 1 $[y+4]; echo "${spaces}${banner[4]}"
   echo $c5
   GotoXY 1 $[y+5]; echo "${spaces}${banner[5]}"
   sleep $delay
   echo $c3
   GotoXY 1 $[y+3]; echo "${spaces}${banner[3]}"
   echo $c6
   GotoXY 1 $[y+6]; echo "${spaces}${banner[6]}"
   sleep $delay
   echo $c2
   GotoXY 1 $[y+2]; echo "${spaces}${banner[2]}"
   echo $c7
   GotoXY 1 $[y+7]; echo "${spaces}${banner[7]}"
   sleep $delay
   echo $c1
   GotoXY 1 $[y+1]; echo "${spaces}${banner[1]}"
   echo $c8
   GotoXY 1 $[y+8]; echo "${spaces}${banner[8]}"
   sleepn $delay
   echo $c0
   GotoXY 1 $[y+0]; echo "${spaces}${banner[0]}"
   echo $c9
   GotoXY 1 $[y+9]; echo "${spaces}${banner[9]}"
   
   echo "${ESC}(B"

}

#########

function Is_Bold() {
   [[ "$1" -ge 8 ]]
}

function Set_FG_Color() {
   if ! Is_Bold "$1"
   then
     echo -n "\033[0;"$[30+$1]"m"
   else
     echo -n "\033[1;"$[22+$1]"m"
   fi
}

function Hex() {
   letters=("a" "b" "c" "d" "e" "f")
   lo=$[$1 % 16]
   hi=$[($1 - lo) / 16]
   if [ "$hi" -ge 10 ]
   then echo -n ${letters[$[hi-10]]}
   else echo -n $hi
   fi
   if [ "$lo" -ge 10 ]
   then echo -n ${letters[$[lo-10]]}
   else echo -n $lo
   fi
}

ColorPercent() {
   local percent
   percent="$1"
   if [[ "${framebuffer}" ]]
   then
      local level
      local invlevel
      (( level = (percent * 255) / 100 ))
      (( invlevel = ( 100 - percent ) * 255 / 100 ))
      echo "${ESC}]Pc00$(Hex ${level})$(Hex ${invlevel})${CSI}1;34m"
   else
      local step
      local steps
      steps=${#gradient[@]}
      (( step = (steps * percent) / 100 ))
      Set_FG_Color ${gradient[step]}
   fi
}

#UpdateProgress()
#{
#   (( ProgressPercent > 99 )) && ProgressPercent=99
#   (( width = COLUMNS * ProgressPercent / 100 ))
#
#   local bar
#   local percent
#   local n
#   bar=""
#   n=0
#   for (( i = 0; i < width; i++ ))
#   do
#      color="$(ColorPercent $[ i * 100 / COLUMNS ])"
#      bar="${bar}${color}▄"
#   done
#
#   Cursor Save
#   GotoXY 1 $(( ROWS - 2 ))
#   echo -n "${CSI}0m${ESC}(U${bar}${CSI}0m${ESC}D"
#   Cursor Restore
#}


##### API #####

ThemeStdoutStream=/dev/null
ThemeStderrStream=/dev/null
#ThemeStdoutStream=/dev/console
#ThemeStderrStream=/dev/console

ThemeFile() {
   :
}

gradient=(
   "${CSI}0;36m"
   "${CSI}0;36m"
   "${CSI}0;37m"
   "${CSI}1;30m"
   "${CSI}1;31m"
   "${CSI}1;32m"
   "${CSI}1;33m"
   "${CSI}1;34m"
   "${CSI}1;35m"
   "${CSI}1;36m"
)

ThemeBefore() {
   GotoXY 1 $[STATUS_START+STATUS_SIZE]
   id=$1
   shift
   msg[$id]="$*"
   local nmsg
   nmsg="${#msg[@]}"
   (( nshow = (nmsg < STATUS_SIZE) ? nmsg : STATUS_SIZE ))
   (( start = nmsg - nshow ))
   local y
   local idx
   (( y = STATUS_START + STATUS_SIZE - nshow ))
   for (( i = start; i < start + nshow ; i++ ))
   do
      GotoXY 1 $y
      (( idx = y - (STATUS_START + STATUS_SIZE) ))
      echo -n "${gradient[$idx]}"
      echo -n "${msg[$i]}${CLREOL}"
      (( y++ ))
   done
}

ThemeAfter() {
   if [[ $2 -gt 0 ]]
   then
      msg[$1]="${msg[$1]} ${CSI}0m${CSI}41;30m failed ${CSI}0m"
      ThemeBefore
   fi
   return $ExecReturn
}

ThemeClear()
{
   ResetPalette

   clear

   SetPalette 0 "000000" # For ${CSI}0;30m

   SetPalette 1 "772020" # For ${CSI}0;31m

#   SetPalette 2 "9966ff" # For ${CSI}0;32m
#   SetPalette 3 "6699ff" # For ${CSI}0;33m
#   SetPalette 4 "33ccff" # For ${CSI}0;34m
#   SetPalette 5 "33ffcc" # For ${CSI}0;35m
#   
#   SetPalette 6 "002909" # For ${CSI}0;36m
#   SetPalette 7 "054323" # For ${CSI}0;37m
#   SetPalette 8 "0b5c3c" # For ${CSI}1;30m
#   SetPalette 9 "107656" # For ${CSI}1;31m
#   SetPalette a "158f6f" # For ${CSI}1;32m
#   SetPalette b "1aa989" # For ${CSI}1;33m
#   SetPalette c "1fc2a2" # For ${CSI}1;34m
#   SetPalette d "25dcbc" # For ${CSI}1;35m
#   SetPalette e "2af5d5" # For ${CSI}1;36m
#   SetPalette f "33ff88" # For ${CSI}1;37m

   SetPalette 2 "260c3f" # For ${CSI}0;32m
   SetPalette 3 "0c263f" # For ${CSI}0;33m
   SetPalette 4 "0c333f" # For ${CSI}0;34m
   SetPalette 5 "0c3f33" # For ${CSI}0;35m
   
   SetPalette 6 "000909" # For ${CSI}0;36m
   SetPalette 7 "052323" # For ${CSI}0;37m
   SetPalette 8 "0b4c3c" # For ${CSI}1;30m
   SetPalette 9 "105656" # For ${CSI}1;31m
   SetPalette a "156f6f" # For ${CSI}1;32m
   SetPalette b "1a8989" # For ${CSI}1;33m
   SetPalette c "1fa2a2" # For ${CSI}1;34m
   SetPalette d "25bcbc" # For ${CSI}1;35m
   SetPalette e "99ffff" # For ${CSI}1;36m
   SetPalette f "0c3f26" # For ${CSI}1;37m

   stty=$(stty -a | grep columns)
   ROWS=$(expr match "$stty" ".*rows \([0-9]*\)")
   COLUMNS=$(expr match "$stty" ".*columns \([0-9]*\)")

   (( scroll = ROWS / 5 ))
   (( scroll = scroll > 10 ? 10 : scroll ))
   (( STATUS_START = ROWS - ( scroll + 1 ) ))
   (( STATUS_SIZE = scroll ))

   # cheat:
   setfont "$ConsoleFont"

   DrawTopLogo

   GotoXY 1 $[STATUS_START+STATUS_SIZE]
   Cursor off
   Cursor Save
#   SetPalette "d" "808080"
#   SetPalette "e" "ffff00"
#   SetPalette "f" "ff0000"
   ScrollArea $STATUS_START $[STATUS_START+STATUS_SIZE]
}

ThemeInit() {
   ThemeClear
}

function ThemeFinish() {
   (
      clear
      echo
      echo -e "\033[36;1mWelcome to GoboLinux `cat ${goboSettings}/GoboLinuxVersion`."
      echo
      SystemInfo
      echo -e "\033[36;22mTerminal......: \033[34;1m\l"
      echo -e "\033[33;1m"
   ) > $1
   echo -en "\033[1;35m"
   ScrollArea 0 ${ROWS}
   Cursor on
   clear
   ResetPalette
}
