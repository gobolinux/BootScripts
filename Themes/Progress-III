#!/bin/bash

# This is a forked version of the 'Progress-II' theme for BootScripts.
# It can display the polychromatic GoboLinux logo of the
# 'Progress' theme. Moreover, it puts a monochromatic GoboLinux logo
# in the console login screen.
#
# Written by Laércio Benedito de Sousa Júnior (lbsousajr@gmail.com)

source ${BootScriptsDir}/Functions/ConsoleToolkit

mode="${1}"
runlevel="${2}"

[[ -e "${goboDevices}/fb/0" ]] && framebuffer="yes"

gradient=( 4 3 1 5 7 9 10 2 6 8 11 )

ESC=$'\033' # Escape character
CSI=$'\233' # Control Sequence Introducer; equivalent to ${ESC}[

SUD=$'\333' # square up & down
SD=$'\334'  # square down
SU=$'\337'  # square up

# Polychromatic letters for GoboLinux logo (for use in boot screen only).

pG=( "${CSI}35;40m${SD}${CSI}31;44m${SU}${CSI}34;40m${SU}${CSI}33m${SU}${SU}${CSI}31m${SU}${CSI}33m${SU} "
     "${CSI}33;47m${SU}${CSI}37;41m${SU}${CSI}0m      "
     "${CSI}1;31m${SUD}${CSI}32;42m${SD}${CSI}0m ${CSI}35m${SU}${SU}${CSI}37;42m${SU}${CSI}35m${SU}${CSI}0m "
     "${CSI}0;32m${SUD}${CSI}1;46m${SU}${CSI}0m   ${CSI}32;46m${SU}${CSI}1;40m${SUD} "
     "${CSI}1;30m${SU}${CSI}42m${SU}${CSI}40m${SD}${CSI}0;32m${SD}${CSI}1;33m${SD}${CSI}30;46m${SD}${SU}${CSI}40m " )

pO=( "        "
     " ${CSI}1;31m${SD}${CSI}0;37m${SD}${CSI}1;31m${SD}${CSI}22m${SD}${CSI}35m${SD}  "
     "${CSI}32;46m${SU}${CSI}1;31;45m${SD}${CSI}40m   ${CSI}32;45m${SD}${CSI}0;37m${SUD} "
     "${CSI}0;36;42m${SU}${CSI}32;40m${SUD}   ${CSI}1;42m${SU}${CSI}22;37;46m${SU}${CSI}0m "
     "${CSI}1m${SU}${CSI}33;46m${SD}${CSI}30;40m${SD}${CSI}33m${SD}${CSI}22;36m${SD}${CSI}1;33;46m${SU}${CSI}22;32;40m${SU} " )

pB=( "${CSI}33;45m${SU}${CSI}34;41m${SU}${CSI}0m      "
     "${CSI}35;43m${SU}${CSI}33;47m${SU}${CSI}1;31;40m${SD}${CSI}22;35m${SD}${CSI}37m${SD}${CSI}1;31m${SD}  "
     "${CSI}1;31;42m${SU}${CSI}47m${SU}${CSI}40m   ${SUD}${CSI}45m${SD}${CSI}0m "
     "${CSI}1;30;42m${SD}${CSI}31;46m${SU}${CSI}40m   ${CSI}46m${SU}${CSI}30m${SD}${CSI}0m "
     "${CSI}32;46m${SU}${CSI}1;33m${SD}${CSI}22;32;40m${SD}${CSI}1;30m${SD}${CSI}33m${SD}${CSI}0;36m${SUD}${CSI}32m${SU} " )

# The design of this 'O' is different from the former 'O' :-)
p_O=( "        "
      " ${CSI}22;37m${SD}${SD}${CSI}1;31m${SD}${CSI}22;35m${SD}${CSI}37m${SD}  "
      "${CSI}1;31m${SUD}${CSI}47m${SD}${CSI}40m   ${SUD}${CSI}42m${SU}${CSI}40m "
      "${CSI}1;31;46m${SU}${CSI}30;42m${SD}${CSI}0m   ${CSI}32;46m${SU}${CSI}1m${SU}${CSI}0m "
      "${CSI}1;30m${SU}${CSI}42m${SD}${CSI}33;40m${SD}${SD}${CSI}30m${SD}${CSI}33m${SUD}${CSI}22;36m${SU}${CSI}0m " )

pL=( "${CSI}33;41m${SU}${SU}${CSI}0m     "
     "${CSI}1;31;45m${SU}${SD}${CSI}0m     "
     "${CSI}45m${SD}${CSI}1;32;47m${SD}${CSI}40m     "
     "${CSI}36m${SUD}${CSI}1;33;42m${SD}${CSI}40m     "
     "${CSI}1;30m${SUD}${CSI}46m${SU}${CSI}33;40m${SD}${SD}${SD}${SD}${CSI}40m " )

pI=( "${CSI}31m${SUD}${CSI}33;41m${SU}${CSI}0m "
     "${SD}${SD} "
     "${CSI}32;42m${SU}${CSI}45m${SD}${CSI}40m "
     "${CSI}31;42m${SU}${CSI}32;46m${SU}${CSI}40m "
     "${CSI}30;46m${SU}${SU}${CSI}40m " )

pN=( "        "
     "${SD}${CSI}1;31m${SD}${CSI}22;37m${SD}${SD}${SD}${CSI}33m${SD}  "
     "${CSI}1m${SUD}${CSI}31;47m${SD}${CSI}40m   ${CSI}47m${SD}${CSI}32m${SU}${CSI}40m "
     "${CSI}30m${SUD}${CSI}33;42m${SD}${CSI}40m   ${CSI}30;46m${SD}${CSI}47m${SD}${CSI}40m "
     "${CSI}33;42m${SD}${CSI}30;46m${SU}${CSI}40m   ${CSI}46m${SU}${CSI}33;42m${SD}${CSI}40m " )

pU=( "        "
     "${CSI}37m${SD}${SD}   ${SD}${SD} "
     "${CSI}47m${SU}${CSI}31m${SD}${CSI}40m   ${CSI}47m${SU}${CSI}22;37;40m${SUD} "
     "${CSI}42m${SD}${CSI}31m${SU}${CSI}40m   ${CSI}33;42m${SD}${CSI}22;32;46m${SU}${CSI}0m "
     "${CSI}30m${SU}${CSI}46m${SD}${CSI}33;40m${SD}${SD}${CSI}22;36m${SD}${CSI}1;33m${SUD}${CSI}42m${SD}${CSI}40m " )

pX=( "       "
     "${SD}${SD}   ${CSI}31m${SD}${CSI}35m${SD}"
     " ${CSI}37m${SU}${CSI}1;31m${SUD}${CSI}32m${SD}${CSI}31;45m${SD}${CSI}40m${SU} "
     "  ${CSI}1;31;46m${SU}${CSI}32m${SU}${CSI}22;36;42m${SU}${CSI}0m  "
     "${CSI}30m${SD}${CSI}32;46m${SU}${CSI}30;40m${SU} ${CSI}22;36m${SU}${CSI}1;30;46m${SU}${CSI}33;40m${SD}${CSI}0m" )

# Monochromatic letters for GoboLinux logo (for use in boot screen and/or login screen).

G=( "${SD}${SUD}${SU}${SU}${SU}${SU}${SU}"
    "${SUD}${SUD}     "
    "${SUD}${SUD} ${SU}${SU}${SUD}${SUD}"
    "${SUD}${SUD}   ${SUD}${SUD}"
    "${SU}${SUD}${SD}${SD}${SD}${SUD}${SUD}" )

O=( "       "
    " ${SD}${SD}${SD}${SD}${SD} "
    "${SUD}${SUD}   ${SUD}${SUD}"
    "${SUD}${SUD}   ${SUD}${SUD}"
    "${SU}${SUD}${SD}${SD}${SD}${SUD}${SU}" )

B=( "${SUD}${SUD}     "
    "${SUD}${SUD}${SD}${SD}${SD}${SD} "
    "${SUD}${SUD}   ${SUD}${SUD}"
    "${SUD}${SUD}   ${SUD}${SUD}"
    "${SUD}${SUD}${SD}${SD}${SD}${SUD}${SU}" )

L=( "${SUD}${SUD}    "
    "${SUD}${SUD}    "
    "${SUD}${SUD}    "
    "${SUD}${SUD}    "
    "${SUD}${SUD}${SD}${SD}${SD}${SD}" )

I=( "${SUD}${SUD}"
    "${SD}${SD}"
    "${SUD}${SUD}"
    "${SUD}${SUD}"
    "${SUD}${SUD}" )

N=( "       "
    "${SD}${SD}${SD}${SD}${SD}${SD} "
    "${SUD}${SUD}   ${SUD}${SUD}"
    "${SUD}${SUD}   ${SUD}${SUD}"
    "${SUD}${SUD}   ${SUD}${SUD}" )

U=( "       "
    "${SD}${SD}   ${SD}${SD}"
    "${SUD}${SUD}   ${SUD}${SUD}"
    "${SUD}${SUD}   ${SUD}${SUD}"
    "${SU}${SUD}${SD}${SD}${SD}${SUD}${SUD}" )

X=( "       "
    "${SD}${SD}   ${SD}${SD}"
    " ${SU}${SUD}${SD}${SUD}${SU} "
    "  ${SUD}${SUD}${SUD}  "
    "${SD}${SUD}${SU} ${SU}${SUD}${SD}" )

##########
#
# UI elements
#
##########

DrawLogo()
{
    spaces=""

    for (( i = 0; i < COLUMNS / 2 - 34; i++ ))
    do
        spaces=" ${spaces}"
    done

    echo -n "${CSI}K${ESC}(U"

    for (( k = 0; k < ${#G[@]}; k++ ))
    do
        echo -n "${spaces}"

        if [[ "${1}" == "Poly" ]]
        then
            echo "${pG[k]}${pO[k]}${pB[k]}${p_O[k]}${pL[k]}${pI[k]}${pN[k]}${pU[k]}${pX[k]}"
        else
            echo "${G[k]} ${O[k]} ${B[k]} ${O[k]} ${L[k]} ${I[k]} ${N[k]} ${U[k]} ${X[k]}"
        fi
    done

    echo "${ESC}(B"
}

DrawTopLogo()
{
    GotoXY 1 $(( ROWS / 2 - 2 ))

    ResetPalette
    SetPalette 0 "000000" # For ${CSI}0;30m
    SetPalette 1 "6f75c0" # For ${CSI}0;31m
    SetPalette 2 "6fc0b4" # For ${CSI}0;32m
    SetPalette 3 "7c6fc0" # For ${CSI}0;33m
    SetPalette 4 "8e6fc0" # For ${CSI}0;34m
    SetPalette 5 "6f87c0" # For ${CSI}0;35m
    SetPalette 6 "6fc0a2" # For ${CSI}0;36m
    SetPalette 7 "6f98c0" # For ${CSI}0;37m
    SetPalette 8 "6fc090" # For ${CSI}1;30m
    SetPalette 9 "6faac0" # For ${CSI}1;31m
    SetPalette a "6fbcc0" # For ${CSI}1;32m
    SetPalette b "6fc07f" # For ${CSI}1;33m
    SetPalette c "000000" # For ${CSI}1;34m
    SetPalette d "808080" # For ${CSI}1;35m
    SetPalette e "ffff00" # For ${CSI}1;36m
    SetPalette f "ff0000" # For ${CSI}1;37m

    # Replace 'Poly' with 'Mono' to get a monochromatic logo in boot screen.
    DrawLogo Poly
}

DrawIssueLogo()
{
    echo "${CSI}22;36;40m"

    # Don't replace 'Mono' with 'Poly' below!
    # Otherwise, you'll get a very ugly logo in the console login screen!
    DrawLogo Mono
}

#########

countExecs()
{
    local case

    # A cheat that works on the common case
    if [[ "${PREVLEVEL}" = "N" ]]
    then
        mode=${goboSettings}/BootScripts/BootUp 
    else
        mode=${goboSettings}/BootScripts/Shutdown
    fi

    cat "${1}" ${mode} | sed 's/#.*$//g' | grep Exec | wc -l | awk '{ print $1 }'
}

PrintStatus()
{
    Cursor Save
    RepeatAt 1 ${ROWS} $(( COLUMNS - 1 )) " "

    case "${1}" in
        Success )
        ;;

        Warning )
            shift

            # Here, ${FGBoldCyan} code corresponds to yellow color.
            PrintAt 3 ${ROWS} "Passed: ${*}" ${FGYellow}

            ${ColorWhite}
        ;;
		
        Failure )
            shift

            # Here, ${FGBoldGray} code corresponds to red color.
            PrintAt 3 ${ROWS} "Failed: ${*}" ${FGBoldGray}

            ${ColorWhite}
        ;;
    esac

    Cursor Restore
}

IsBold()
{
    (( ${1} >= 8 ))
}

function Set_FG_Color()
{
    if ! IsBold ${1}
    then
        echo -n "${CSI}0;$(( 30 + ${1} ))m"
    else
        echo -n "${CSI}1;$(( 22 + ${1} ))m"
    fi
}

Hex()
{
    letters=( "a" "b" "c" "d" "e" "f" )
    (( lo = ${1} % 16 ))
    (( hi = ( ${1} - lo ) / 16 ))
	
    for k in ${hi} ${lo}
    do
        if (( k >= 10 ))
        then
            echo -n ${letters[$(( k - 10 ))]}
        else
            echo -n ${k}
        fi
    done
}

bar=""
lastI=0
n=0

UpdateProgress()
{
    (( ProgressPercent > 99 )) && ProgressPercent=99
    (( width = COLUMNS * ProgressPercent / 100 ))
    steps=${#gradient[@]}
    (( step = COLUMNS / steps ))

    for (( i = lastI; i < width; i++ ))
    do
        if [[ "${framebuffer}" ]]
        then
            (( level = i * 255 / COLUMNS ))
            (( invlevel = ( COLUMNS - i ) * 255 / COLUMNS ))
		
            color=00$(Hex ${level})$(Hex ${invlevel})
            bar="${bar}${ESC}]Pc${color}${CSI}1;34m${SUD}"
        else
            if (( i % step == 0 && n < steps ))
            then
                bar="${bar}$(Set_FG_Color ${gradient[n]})"
                (( n++ ))
            fi
			
            bar="${bar}${SUD}"
        fi
    done

    (( lastI = width ))
    Cursor Save
    GotoXY 1 $(( ROWS - 1 ))
    echo -n "${CSI}0m${ESC}(U${bar}${CSI}0m${ESC}D"
    Cursor Restore
}

(( scroll = ROWS / 5 ))
(( STATUS_START = ROWS - ( scroll + 2 ) ))
(( STATUS_SIZE = scroll ))

ColorWhite="echo -n ${CSI}1;35m"
ColorYellow="echo -n ${CSI}1;36m"
ColorRed="echo -n ${CSI}1;37m"

#### API ####

ThemeStdoutStream=${goboDevices}/null
ThemeStderrStream=${goboDevices}/null

ThemeFile()
{
    ProgressPercent=0
    ModeExecs=$(countExecs "${goboSettings}/BootScripts/${1}")
    (( ModeExecs < 1 )) && ModeExecs=100
    (( ProgressStep = ( 100 - ProgressPercent ) / ModeExecs ))
}

ThemeBefore()
{
    (( ProgressPercent += ProgressStep ))
    UpdateProgress "${ProgressPercent}"
    GotoXY 1 $(( STATUS_START + STATUS_SIZE ))
    id=${1}
    shift
    echo "${*}"
    msg[${id}]="${*}"
}

ThemeAfter()
{
    (( ${2} > 0 )) && PrintStatus "Failure" "${msg[${1}]}"
    return ${ExecReturn}    
}
   
ThemeInit()
{
    clear

    # cheat:
    setfont "${ConsoleFont}"

    DrawTopLogo
    GotoXY 1 $(( STATUS_START + STATUS_SIZE ))
    ${ColorWhite}
    Cursor off
    Cursor Save
    ScrollArea ${STATUS_START} $(( STATUS_START + STATUS_SIZE ))
}

ThemeFinish() {
    (
        clear | sed -e 's/'${ESC}'\[/'${CSI}'/g'
	DrawIssueLogo
	echo "${CSI}1;36mWelcome to GoboLinux $(cat ${goboSettings}/GoboLinuxVersion)."
	echo
	SystemInfo
	echo "${CSI}22;36mTerminal......: ${CSI}1;34m\l"
	echo "${CSI}1;33m"
    ) > ${1}

    ${ColorWhite}
    ScrollArea 0 ${ROWS}
    Cursor on
    clear
    ResetPalette
}
